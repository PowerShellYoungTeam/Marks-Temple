name: PowerShell CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pwsh-matrix:
    name: pwsh / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Show key files
        run: |
          echo "==== Build-MarksTemple.ps1 ===="
          sed -n '1,140p' src/Build-MarksTemple.ps1
          echo "==== Tests ===="
          sed -n '1,140p' tests/Build-MarksTemple.Tests.ps1
        shell: bash

      - name: Install Pester
        run: |
          Install-Module Pester -Force -Scope CurrentUser
          (Get-Module Pester -ListAvailable | Sort Version -Descending | Select -First 1).Version
        shell: pwsh

      - name: Pre-parse function
        run: |
          $ast = [System.Management.Automation.Language.Parser]::ParseFile("$PWD/src/Build-MarksTemple.ps1",[ref]$null,[ref]$null)
          Write-Host "Parsed OK. Top-level AST type: $($ast.GetType().Name)"
        shell: pwsh

      - name: Run Pester
        run: Invoke-Pester -Path ./tests -Output Detailed -Verbose -CI
        shell: pwsh

  windows-powershell:
    name: Windows PowerShell
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show key files
        run: |
          echo "==== Build-MarksTemple.ps1 ===="
          type src\Build-MarksTemple.ps1
          echo "==== Tests ===="
          type tests\Build-MarksTemple.Tests.ps1
        shell: bash
      - name: Install Pester
        run: Install-Module Pester -Force -Scope CurrentUser
        shell: powershell
      - name: Pre-parse function
        run: |
          [void][System.Management.Automation.Language.Parser]::ParseFile("$PWD\src\Build-MarksTemple.ps1",[ref]$null,[ref]$null)
          Write-Host "Parsed OK."
        shell: powershell
      - name: Run Pester
        run: Invoke-Pester -Path .\tests -Output Detailed -Verbose
        shell: powershell